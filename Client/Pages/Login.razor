@layout LoginLayout
@page "/"
@using Client.Services;
@using Common.Model;
@inject NavigationManager NavigationManager
@inject HttpClient Http;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage




<PageTitle>Registrering</PageTitle>

<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
    
    <div class="loginpop" style="display: @logdisplay">
        <div class="loginbox">
            <a @onclick="ToggleLogPop">Tilbage</a>
            <h1>Log på Calendarica</h1>
            <EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary/>
                <div class="col-md-12 mb-3">
                    <label for="Email" style="font-weight:bold">Email</label>
                    <div class="input-container">
                        <span class="icon"><i class="material-icons">mail</i></span>
                        <InputText id="Email" @bind-Value="brugerForm.Email" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 mb-3">
                <label for="Password" style="font-weight:bold">Password</label>
                <div class="form-group">
                    <div class="input-container">
                        <InputText type="@passwordType" id="Password" @bind-Value="brugerForm.Password" class="form-control" />
                        <span class="icon"><i class="material-icons">lock</i></span>
                        <i @onclick="TogglePasswordVisibility" class="material-icons hover-effect">visibility</i>
                    </div>
                </div>
                <br />
                <div>
                    <button type="submit" class="btn btn-login">Login</button>
                </div>
                </div>
                <p style="display: @showerror; color: red">Hov, der er sket en fejl. Har du skrevet din email og password rigtigt?</p>

            </EditForm>
        </div>
    </div>

    <div class="loginpop" style="display: @tilmelddisplay">
        <div class="registerbox">
            <a @onclick="ToggleDispPop">Tilbage</a>
            <div class="headercontainer">
            <h5>Opret din konto</h5>
            </div>
            <EditForm EditContext="@bEditContext" class="row p-3" OnValidSubmit="@HandleValidRegister">
                <DataAnnotationsValidator />
                <div class="col-md-12 mb-3">
                    <label for="Navn">Navn</label>
                    <InputText id="Navn" @bind-Value="bruger.Fornavn" class="form-control" required />
                </div>
                <div class="col-md-12 mb-3">
                    <label for="Navn">Efternavn</label>
                    <InputText id="Navn" @bind-Value="bruger.Efternavn" class="form-control" required />
                </div>
                <div class="col-md-12 mb-3">
                    <label for="Telefonnummer">Telefonnummer</label>
                    <InputNumber id="Telefonnummer" @bind-Value="bruger.Telefonnummer" class="form-control" required />
                </div>
                <div class="col-md-12 mb-3">
                    <label for="Adresse">Adresse</label>
                    <InputText id="Adresse" @bind-Value="bruger.Adresse" class="form-control" required />
                </div>
                <div class="col-md-12 mb-3">
                    <label for="Email">Email</label>
                    <InputText id="Email" @bind-Value="bruger.Email" class="form-control" required />
                    <ValidationMessage For="@(() => bruger.Email)" />
                </div>
                <div class="col-md-6 mb-3">
                    <label for="Fødselsdag">Fødselsdag</label>
                    <InputDate id="Fødselsdag" @bind-Value="bruger.Fødselsdag" class="form-control" required />
                </div>
                <div class="col-md-6 mb-3">
                    <label for="Password">Password</label>
                    <InputText id="Password" @bind-Value="bruger.Password" class="form-control" required />
                </div>
                <div>
                    <p>
                        <a @onclick="TogglePopUp" style="color:#027C50">Læs vores betingelser her</a>.
                        <input type="checkbox" checked="checked" name="Accepterer" style="margin-bottom:15px"> Jeg accepterer betingelserne
                    </p>
                    <button type="submit" class="btn btn-primary">Registrer</button>
                </div>
                <div>
                    @if (!string.IsNullOrEmpty(TakBesked))
                    {
                        <p class="greeting">@TakBesked</p>
                    }
                </div>
            </EditForm>
        </div>
    </div>

    <div class="popup" style="display: @showPopup">
        <h2>Betingelser</h2>
        <p>Her er vores betingelser:</p>
        <ol>
            <li>Du skal være mindst 18 år gammel for at være frivillig på festivalen.</li>
            <li>Du skal være til rådighed i mindst 24 timer som frivillig under festivalen.</li>
            <li>Du skal overholde alle instruktioner og anvisninger fra festivalens personale.</li>
            <li>Du skal behandle festivalgæster, kunstnere og andre frivillige med respekt og venlighed.</li>
            <li>Du skal være ansvarlig for dit eget velbefindende og sikkerhed under festivalen.</li>
            <li>Du skal respektere festivalens regler og politikker, herunder reglerne for alkohol- og narkotikabrug.</li>
            <li>Du accepterer, at festivalens arrangører ikke kan holdes ansvarlige for eventuelle skader eller tab, der opstår under din frivillige tjeneste.</li>
        </ol>
        <button class="btn btn-danger" @onclick="TogglePopUp">Luk</button>
    </div>

    <div class="loginpop" style="display: @omosdisplay">
        <a @onclick="OmOsDispPop">Back</a>
    </div>

    <div class="row index-container">
        <div class="col col1" @onclick="ToggleDispPop">
            <h1>Tilmeld dig som frivillig</h1>
        </div>
        <div class="col col2" @onclick="ToggleLogPop" >
            <h1>Login</h1>
        </div>
        <div class="col col3" @onclick="OmOsDispPop">
            <h1>Om os</h1>
        </div>
    </div>
</body>

@code {
    public string showerror = "none";
    private Bruger bruger = new Bruger();
    private Bruger brugerForm = new Bruger();
    private Bruger[]? brugerlist = new Bruger[0];
    private string billede = "visibility.png";

    private string tilmelddisplay = "none";
    private string logdisplay = "none";
    private string omosdisplay = "none";

    private bool showPassword = false;
    private string passwordType = "password";

    public string TakBesked { get; set; }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
        passwordType = showPassword ? "text" : "password";
    }

    string showPopup = "none";


    void ToggleLogPop()
    {
        if (logdisplay == "none")
        {
            logdisplay = "inline";
        }else
        {
            logdisplay = "none";
        }
    }

    void ToggleDispPop()
    {
        if (tilmelddisplay == "none")
        {
            tilmelddisplay = "inline";
        }
        else
        {
            tilmelddisplay = "none";
        }
    }

    void TogglePopUp()
    {
        if (showPopup == "none")
        {
            showPopup = "inline";
        }
        else
        {
            showPopup = "none";
        }
    }

    void OmOsDispPop()
    {
        NavigationManager.NavigateTo($"/om", forceLoad: true);
    }

    bool showEditForm = false;
    bool visFormular = true;


    private void ToggleEditForm()
    {
        visFormular = !visFormular;
        showEditForm = !showEditForm;
    }


    private EditContext aEditContext;
    private EditContext bEditContext;

    [Inject]
    private IBrugerService mService { get; set; }

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(bruger);
        bEditContext = new EditContext(bruger);
        bruger.Fødselsdag = DateTime.Now;
    }

    public async Task HandleValidSubmit()
    {
        if (brugerForm.Email == " ")
        {
            showerror = "inline";
        }
        else
        {
            var email = brugerForm.Email;
            bruger = await getSpecific(email);

            Console.WriteLine(bruger.Efternavn);

            login();
        }


    }

    public async Task HandleValidRegister()
    {
        await Add();
        bruger.Fødselsdag = DateTime.Now;
        TakBesked = "Tak for din tilmelding, du kan nu logge ind. Vi glæder os til at se dig på pladsen!";
    }

    public async Task<Bruger> getSpecific(string email)
    {

        var bruger = await mService.getSpecific(email);

        return bruger;

    }



    public async Task Add()
    {
        await mService.Add(bruger);
        bruger = new();

    }

    private async Task login()
    {
        if (bruger.Efternavn == null || bruger.Email == null || bruger.Password == null)
        {
            showerror = "inline";
        }
        else
        {
            if (brugerForm.Password.ToString() == bruger.Password.ToString() && bruger.IsKoordinator == true)
            {
                NavigationManager.NavigateTo($"/vagtliste", forceLoad: true); // Navigerer til side hvis password passer med det der ligger i serveren og brugeren har koordinator-privillegier
            }
            else if (brugerForm.Password.ToString() == bruger.Password.ToString() && bruger.IsKoordinator == false)
            {
                NavigationManager.NavigateTo($"/redigerbruger", forceLoad: true); // Navigerer til side hvis password passer med det der ligger i serveren og brugeren har koordinator-privillegier
            }
            else
            {
                showerror = "inline";
            }
        }

        await sessionStorage.SetItemAsync("userId", bruger.ID);
        await sessionStorage.SetItemAsync("IsKoordinator", bruger.IsKoordinator);


    }
}
